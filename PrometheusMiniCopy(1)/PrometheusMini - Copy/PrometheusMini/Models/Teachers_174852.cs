//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrometheusMini.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Text.RegularExpressions;

    public class CustomValidator : ValidationAttribute
    {
        protected override ValidationResult IsValid(object value, ValidationContext validationContext)
        {
            if (value != null)
            {
                string password = value.ToString();

                if (Regex.IsMatch(password, @"^[A-Z][a-z]*"))
                {
                    return ValidationResult.Success;
                }
                else
                {
                    return new ValidationResult("Password must starts with Capital Letter");
                }
            }
            else
            {
                return new ValidationResult("" + validationContext.DisplayName + " is required");
            }
        }
    }

    public partial class Teachers_174852
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Teachers_174852()
        {
            this.Assignments_174852 = new HashSet<Assignments_174852>();
        }
    
        public int TeacherId { get; set; }
        [Required(ErrorMessage = "Username cannot be null")]
        public string Username { get; set; }
        [Required(ErrorMessage = "FirstName cannot be null")]
        public string FirstName { get; set; }
        [Required(ErrorMessage = "LastName cannot be null")]

        public string LastName { get; set; }
        [Required(ErrorMessage = "Address cannot be null")]
        public string Address { get; set; }
        [Required(ErrorMessage = "DOB cannot be null")]
        public System.DateTime DOB { get; set; }
        [Required(ErrorMessage = "City cannot be null")]
        public string City { get; set; }
        [Required(ErrorMessage = "Password cannot be null", AllowEmptyStrings = false)]
        [DataType(DataType.Password)]
        [StringLength(25, ErrorMessage = "Password should have atleast 8 characters", MinimumLength = 8)]
        [RegularExpression(@"(\S)+", ErrorMessage = " Space not allowed")]
        [CustomValidator]
        public string Password { get; set; }
        [Required(ErrorMessage = "MobileNumber cannot be null")]
        [StringLength(10, ErrorMessage = "Mobile Number nust be 10 characters", MinimumLength = 10)]
        public string MobileNumber { get; set; }
        [Required(ErrorMessage = "IsAdmin cannot be null")]
        public string IsAdmin { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Assignments_174852> Assignments_174852 { get; set; }
    }
}

